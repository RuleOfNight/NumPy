

---

### Ép kiểu của list thành array
```python
import numpy as np

# Ép kiểu của list thành array
a = np.array([1, 2, 3])           # (1 chiều)
a = np.array([[1, 2, 3], [4, 5, 6]])  # (2 chiều)
print(a)
```
Kết quả:
```
[[1 2 3]
 [4 5 6]]
```

---

### Đếm số chiều của mảng
```python
# Đếm số chiều của mảng
print(a.ndim)
```
Kết quả:
```
2
```

---

### Đếm số hàng và cột
```python
# Đếm số hàng và cột
print(a.shape)
```
Kết quả:
```
(2, 3)
```

---

### Gán kiểu dữ liệu cho dữ liệu
```python
# Gán kiểu dữ liệu cho dữ liệu
a = np.array([1, 2, 3], dtype='int32')
print(a.dtype)
```
Kết quả:
```
int32
```

---

### Lấy kích cỡ của mảng (kích thước mỗi phần tử tính theo byte)
```python
# Lấy kích cỡ của mảng
print(a.itemsize)
```
Kết quả:
```
4
```

---

### Lấy số lượng phần tử có trong mảng
```python
# Lấy số lượng phần tử có trong mảng
print(a.size)
```
Kết quả:
```
3
```

---

### In ra giá trị tại một vị trí cụ thể
```python
# Tạo một mảng hai chiều mẫu
a = np.array([
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]
])

# In ra giá trị tại vị trí [1][1]
print(a[1][1])
```
Kết quả:
```
5
```

---

### Chọn cả một hàng/cột
```python
# Chọn cả 1 hàng/cột
a[:, 1] = [2, 5, 8]
print(a)
```
Kết quả:
```
[[1 2 3]
 [4 5 6]
 [7 8 9]]
```

---

### Chọn một vùng cụ thể
```python
# Chọn một vùng
print(a[1:-1, 2:-2])
```
Kết quả:
```
[]
```

---

### Tạo một ma trận toàn 0
```python
# Tạo một ma trận toàn 0
row, col = 3, 3
print(np.zeros((row, col)))
```
Kết quả:
```
[[0. 0. 0.]
 [0. 0. 0.]
 [0. 0. 0.]]
```

---

### Tạo một ma trận toàn 1
```python
# Tạo một ma trận toàn 1
print(np.ones((row, col)))
```
Kết quả:
```
[[1. 1. 1.]
 [1. 1. 1.]
 [1. 1. 1.]]
```

---

### Tạo một ma trận toàn số tự chọn
```python
# Tạo một ma trận toàn số tự chọn
num = 10
print(np.full((row, col), num))
```
Kết quả:
```
[[10 10 10]
 [10 10 10]
 [10 10 10]]
```

---

### Tạo ma trận đơn vị
```python
# Tạo ma trận đơn vị
print(np.identity(3))
```
Kết quả:
```
[[1. 0. 0.]
 [0. 1. 0.]
 [0. 0. 1.]]
```

---

### Tính toán ma trận
```python
# Tính toán ma trận
print(a + 2)
print(a - 2)
print(a * 2)
print(a / 2)
print(a ** 2)
print(np.cos(a))
print(np.sin(a))
print(np.tan(a))
```
Kết quả:
```
[[ 3  4  5]
 [ 6  7  8]
 [ 9 10 11]]
 
[[-1  0  1]
 [ 2  3  4]
 [ 5  6  7]]

[[ 2  4  6]
 [ 8 10 12]
 [14 16 18]]

[[0.5 1.  1.5]
 [2.  2.5 3. ]
 [3.5 4.  4.5]]

[[ 1  4  9]
 [16 25 36]
 [49 64 81]]

[[-0.41614684 -0.9899925  -0.65364362]
 [ 0.28366219  0.96017029  0.75390225]
 [ 0.13673722 -0.91113026 -0.83907153]]

[[ 0.84147098  0.90929743  0.14112001]
 [-0.7568025  -0.2794155   0.98935825]
 [ 0.6569866   0.41211849 -0.54402111]]

[[ 1.55740772 -1.15782128 -0.14254654]
 [-0.29100619 -0.29100619  1.15782128]
 [ 1.55740772  0.41211849 -0.54402111]]
```

---
